<?xml version="1.0" encoding="UTF-8"?>
<segment name='chapter'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
DC: Diderot Compiler
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
DC: Diderot Compiler
]]>
</field> <!-- title_src -->
<field name='label'>
ch:dc
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->


<segment name='section'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Overview
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Overview
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::overview
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::diderot
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::diderot
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>Diderot is an online book system that integrates discussions with content. Diderot consists of two separate systems that are designed to work together:</p>
<ul>
<li><p>the Diderot website, which provides the users (instructors and students) with an online interface for reading books and holding discussions,</p></li>
<li><p>the Diderot compiler, <strong><em>DC</em></strong> for short, that translates LaTeX and Markdown sources to Diderot-style XML.</p></li>
</ul>
<p>Diderot-style XML files may be uploaded onto the Diderot site. In addition to XML, Diderot site accepts conventional PDF documents and slide decks for upload.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
Diderot is an online book system that integrates discussions with
content.  Diderot consists of two separate systems that are
designed to work together:
\begin{itemize}
\item the Diderot website, which
provides the users (instructors and students) with an online interface
for reading books and holding discussions, 
\item the Diderot
compiler, \defn{DC} for short, that translates LaTeX and Markdown
sources to Diderot-style XML.
\end{itemize}
Diderot-style XML files may be uploaded onto the Diderot site. 
In addition to XML, Diderot site accepts conventional PDF documents
and slide decks for upload.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::review
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::review
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>In this chapter, we briefly review typesetting for Diderot using LaTex and Markdown. In <a href="ch:publish">the next chapter</a>, we discuss some important points about how to publish content on Diderot and how to structure your source code.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
In this chapter, we briefly review typesetting for Diderot using LaTex and Markdown.
In \href{ch:publish}{the next chapter}, we discuss some important points about how to publish content on Diderot and how to structure your source code.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:imp:dc::sources
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='important'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Sources and Contributions
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Sources and Contributions
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
imp:dc::sources
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p> To go through the examples in this chapter, please clone <a href="https://github.com/diderot-edu/diderot-guide">the github repository for the guide</a> and follow the instructions in <code>INSTALL.md</code>.</p>
<p>Please send feeback by <a href="https://github.com/diderot-edu/diderot-guide/issues">opening an issue</a>.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
\label{imp:dc::sources}
To go through the examples in this chapter, please clone 
\href{https://github.com/diderot-edu/diderot-guide}{the github repository for the guide}
and follow the instructions in \lstinline`INSTALL.md`. 

Please send feeback by \href{https://github.com/diderot-edu/diderot-guide/issues}{opening an issue}.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- important -->

</segment> <!-- cluster -->


</segment> <!-- section -->

<segment name='section'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Typesetting with LaTex
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Typesetting with LaTex
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::typesetting-with-latex
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::compatible
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::compatible
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>DC is compatible with LaTeX. Whatever updates you make to upload your notes on Diderot will remain compatible with LaTeX and you can generate a PDF document from your notes. The reverse direction, going from LaTeX to Diderot, is not as definitive but works reasonably well and with some care you can compile your LaTeX sources to XML.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
DC is compatible with LaTeX. Whatever updates you make to upload your notes on Diderot will remain compatible with LaTeX and  you can generate a PDF document from your notes.
The reverse direction, going from LaTeX to Diderot, is not as
definitive but works reasonably well and with some care you can
compile your LaTeX sources to XML.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:def:dc::books-and-booklets
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='definition'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Books and Booklets
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Books and Booklets
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
def:dc::books-and-booklets
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>After a LaTeX document is translated to XML via DC, it can be uploaded as a <strong><em>chapter</em></strong> to a Diderot book or Diderot booklet.</p>
<ul>
<li><p>A Diderot <strong><em>book</em></strong> is a collection of parts, where each <strong><em>part</em></strong> is a collection of chapters.</p></li>
<li><p>A Diderot <strong><em>booklet</em></strong> is a collection of chapters.</p></li>
</ul>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
After a LaTeX document is translated to XML via DC, it can be uploaded as a \defn{chapter} to a Diderot book or Diderot booklet.  

\begin{itemize}
\item
A Diderot \defn{book} is a collection of parts, where each \defn{part} is a collection of chapters.

\item
A Diderot \defn{booklet} is a collection of chapters. 
\end{itemize}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- definition -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:xmpl:dc::https
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
xmpl:dc::https
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>In <a href="https://github.com/diderot-edu/diderot-guide">guide sources</a>, the folders <code>book</code> and <code>booklet</code> contain a sample book (consisting of parts and chapters) and booklet (consisting only of chapters) respectively.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
In
\href{https://github.com/diderot-edu/diderot-guide}{guide sources},
the folders \lstinline`book` and \lstinline`booklet` contain a sample book (consisting of parts and chapters) and booklet (consisting only of chapters) respectively.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

</segment> <!-- cluster -->


<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Books, Chapters, and Sections
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Books, Chapters, and Sections
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::books-chapters-and-sections
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::requires
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::requires
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>DC requires a book (or booklet) to be organized into chapters, each of which then contains sections (section, subsection, subsubsection, and paragraph). Each chapter and section can in turn contain “elements” each of which is an “atom” or a “group”.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
DC requires a book (or booklet) to be organized into chapters, each of which then contains sections (section, subsection, subsubsection, and paragraph).  Each chapter and section can in turn contain ``elements'' each of which is an ``atom'' or a  ``group''.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:xmpl:dc::sections
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Sections
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Sections
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
xmpl:dc::sections
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>A chapter typically consists of a number of sections.</p>
<pre><code>\chapter{Introduction}  
\label{ch:introduction}  % Chapters must have a label.  
     
&lt;elements&gt;  
  
\section{A Section}  
\label{sec:introduction} % Optional but recommended section label.     
  
&lt;elements&gt;  
  
\subsection{A Subsection}  
\label{sec:introduction::sub} % Optional but recommended section label.     
  
&lt;elements&gt;  
  
\subsubsection {A Subsubsection}  
\label{sec:introduction::subsub}  
&lt;elements&gt;  
  
\paragraph {A paragraph}  
\label{sec:introduction::paragraph}  
&lt;elements&gt;  
  </code></pre>
<p>The term <code>element</code> in the example refers to an "atom" or a "group".</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
A chapter typically consists of a number of sections.

\begin{lstlisting}
\chapter{Introduction}
\label{ch:introduction}  % Chapters must have a label.
   
<elements>

\section{A Section}
\label{sec:introduction} % Optional but recommended section label.   

<elements>

\subsection{A Subsection}
\label{sec:introduction::sub} % Optional but recommended section label.   

<elements>

\subsubsection {A Subsubsection}
\label{sec:introduction::subsub}
<elements>

\paragraph {A paragraph}
\label{sec:introduction::paragraph}
<elements>

\end{lstlisting}

The term \lstinline`element` in the example refers to an "atom" or a "group".
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Atoms
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Atoms
]]>
</field> <!-- title_src -->
<field name='label'>
sec:mtl::atoms
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:def:dc::atom
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='definition'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Atom
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Atom
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
def:dc::atom
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>To increase interactivity, Diderot relies on atoms. Atoms are smallest unit of sections and can be included in any section (i.e., section, subsection, subsubsection, and paragraph). In diderot, essentially all content must be inside of atoms. Like any other LaTeX section, an atom cannot be included inside of a LaTeX environment.</p>
<p>An <strong><em>atom</em></strong> is either</p>
<ol>
<li><p>a plain paragraph, or</p></li>
<li><p>a named block of text of the form</p>
<pre><code>\begin{&lt;atom&gt;}[Optional title]  
\label{atom-label} % optional but recommended label  
&lt;atom body&gt;  
\end{&lt;atom&gt;}  </code></pre>
<p>The term <code>&lt;atom&gt;</code> above can be replaced with any of the following:</p>
<ul>
<li><p><code>algorithm</code>, <code>answer</code>, <code>assumption</code>,</p></li>
<li><p><code>code</code>, <code>corollary</code>, <code>costspec</code>,</p></li>
<li><p><code>datastr</code> (data structure), <code>datatype</code>, <code>definition</code></p></li>
<li><p><code>example</code>, <code>exercise</code>,</p></li>
<li><p><code>gram</code> (non descript atom, i.e., a paragraph),</p></li>
<li><p><code>hint</code>,</p></li>
<li><p><code>important</code>,</p></li>
<li><p><code>lemma</code>,</p></li>
<li><p><code>note</code>,</p></li>
<li><p><code>observe</code>, <code>observation</code>,</p></li>
<li><p><code>preamble</code> (as a first atom of chapter), <code>problem</code> (a problem for students to solve), <code>proof</code>, <code>proposition</code>,</p></li>
<li><p><code>question</code>, <code>quote</code>,</p></li>
<li><p><code>remark</code> (an important note), <code>reminder</code>,</p></li>
<li><p><code>solution</code> (a solution to an exercise/problem), <code>syntax</code> (a piece of syntax)</p></li>
<li><p><code>task</code> (a task in an assignment), <code>theorem</code>.</p></li>
</ul></li>
</ol>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
To increase interactivity, Diderot relies on atoms.
Atoms are smallest unit of sections and can be included in any section (i.e., section,  subsection, subsubsection, and paragraph).
In diderot, essentially all content  must be inside of atoms.
Like any other LaTeX section, an atom cannot be included inside of a
LaTeX environment.

An \defn{atom} is either
\begin{enumerate}
\item a plain paragraph, or
\item a named block of text of the form

\begin{lstlisting}
\begin{<atom>}[Optional title]
\label{atom-label} % optional but recommended label
<atom body>
\end{<atom>}
\end{lstlisting}
The term \lstinline`<atom>` above can be replaced with any of the following:
\begin{itemize}
\item \lstinline`algorithm`, \lstinline`answer`, \lstinline`assumption`,
\item \lstinline`code`, \lstinline`corollary`, \lstinline`costspec`,
\item \lstinline`datastr` (data structure), \lstinline`datatype`, \lstinline`definition`
\item \lstinline`example`, \lstinline`exercise`,
\item \lstinline`gram`  (non descript atom, i.e., a paragraph),
\item \lstinline`hint`, 
\item \lstinline`important`, 
\item \lstinline`lemma`,
\item \lstinline`note`,
\item \lstinline`observe`, \lstinline`observation`,
\item \lstinline`preamble` (as a  first atom of chapter), \lstinline`problem` (a problem for students to solve), \lstinline`proof`, \lstinline`proposition`,
\item \lstinline`question`, \lstinline`quote`,
\item \lstinline`remark` (an important note), \lstinline`reminder`,
\item \lstinline`solution` (a solution to an exercise/problem), \lstinline`syntax` (a piece of syntax)
\item \lstinline`task` (a task in an assignment), \lstinline`theorem`.
\end{itemize}
\end{enumerate}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- definition -->

</segment> <!-- cluster -->

<segment name='flex'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:imp:dc::figure-and-table-atoms
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='important'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Figure and Table Atoms
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Figure and Table Atoms
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
imp:dc::figure-and-table-atoms
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>In addition to the atoms above, Diderot also supports <code>figure</code> and <code>table</code> atoms, which have slightly different syntax:</p>
<pre><code>\begin{&lt;atom&gt;}[Optional title]  
&lt;atom body&gt;  
\caption{Caption}  
\label{atom-label} % optional but recommended label  
\end{&lt;atom&gt;}  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
In addition to the atoms above, Diderot also supports \lstinline`figure` and \lstinline`table` atoms, which have slightly different syntax:
\begin{lstlisting}
\begin{<atom>}[Optional title]
<atom body>
\caption{Caption}
\label{atom-label} % optional but recommended label
\end{<atom>}
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- important -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
xmpl:dc::latex
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>The following LaTeX code for a table atom generates the atom shown below.</p>
<pre><code>\begin{table}  
\label{tbl:dc::motor-efficiency}  
\begin{tabular}{cc}  
Type &amp; Efficiency  
\\  
Internal combustion Engine &amp; \%20  
\\  
Electric Motor &amp; \%90  
\end{tabular}  
\caption{Energy efficiency of internal-combustion engines are significantly lower than those of electric motors.}  
\end{table}  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
The following LaTeX code for a table atom generates the atom shown below.

\begin{lstlisting}
\begin{table}
\label{tbl:dc::motor-efficiency}
\begin{tabular}{cc}
Type & Efficiency
\\
Internal combustion Engine & \%20
\\
Electric Motor & \%90
\end{tabular}
\caption{Energy efficiency of internal-combustion engines are significantly lower than those of electric motors.}
\end{table}
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

<atom name='table'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
tbl:dc::motor-efficiency
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<table>
<tbody>
<tr class="odd">
<td style="text-align: center;">Type</td>
<td style="text-align: center;">Efficiency</td>
</tr>
<tr class="even">
<td style="text-align: center;">Internal combustion Engine</td>
<td style="text-align: center;">%20</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Electric Motor</td>
<td style="text-align: center;">%90</td>
</tr>
</tbody>
</table>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
\label{tbl:dc::motor-efficiency}
\begin{tabular}{cc}
Type & Efficiency
\\
Internal combustion Engine & \%20
\\
Electric Motor & \%90
\end{tabular}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
<p>Energy efficiency of internal-combustion engines are significantly lower than those of electric motors.</p>
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
Energy efficiency of  internal-combustion engines are significantly lower than those of electric motors.
]]>
</field> <!-- caption_src -->
</atom> <!-- table -->

</segment> <!-- flex -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:imp:dc::nesting-of-atoms
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='important'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Nesting of Atoms
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Nesting of Atoms
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
imp:dc::nesting-of-atoms
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>A named atom cannot be nested inside another named atom. Similarly, a named atom cannot be nested inside a LaTeX environment.</p>
<p>For example, the following is wrong:</p>
<pre><code>\begin{itemize}  
\item   
\begin{gram}[This is a titled paragraph]  
But it is wrong, because it includes an atom inside of a LaTeX environment.  
\end{gram}  
\end{itemize}  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
A named atom cannot be nested inside another named atom.
Similarly, a named atom cannot be nested inside a LaTeX environment.

For example, the following is wrong:
\begin{lstlisting}
\begin{itemize}
\item 
\begin{gram}[This is a titled paragraph]
But it is wrong, because it includes an atom inside of a LaTeX environment.
\end{gram}
\end{itemize}
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- important -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:nt:dc::atom
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='note'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
nt:dc::atom
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>While an atom can be a paragraph, not every paragraph is an atom. Paragraphs only at the “top level”, not inside LaTeX environments are atoms.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
While an atom can be a paragraph, not every paragraph is an atom.  Paragraphs only at the ``top level'', not inside LaTeX environments are atoms.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- note -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:nt:dc::authors
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='note'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
nt:dc::authors
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>Authors can currently use only the atoms defined above. We are working on allowing authors to define their own atoms. In the mean time, you can request new atoms by <a href="mailto:umut@cs.cmu.edu">emailing Umut</a>.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
Authors can currently use only the atoms defined above. We are working on allowing authors to define their own atoms.  
In the mean time, you can request new atoms by 
\href{mailto:umut@cs.cmu.edu}{emailing Umut}.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- note -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:imp:dc::atoms
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='important'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
imp:dc::atoms
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>Atoms are <strong><em>single standing</em></strong>, that is to say surrounded by "vertical white spaces" or blank lines on both ends (or LaTeX comments). Therefore, white space matters. In the common case, this goes along with our intuition of how text is organized but is worth keeping in mind. For example, the following code is a plain paragraph atom but not a definition atom, because definition is not single standing.</p>
<pre><code>We can now define Kleene closure as follows.  
\begin{definition}  
...  
\end{definition}  </code></pre>
<p>The following is a definition atom, because it is single standing.</p>
<pre><code>  
\begin{definition}  
...  
\end{definition}  
  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
Atoms are \defn{single standing}, that is to say surrounded by "vertical
white spaces" or blank lines on both ends (or LaTeX comments).
Therefore,  white space  matters. In the common case, this goes along with our intuition of how text is organized but is worth keeping in mind. For example, the following code is a plain paragraph atom but not a definition atom, because definition is not single standing.

\begin{lstlisting}
We can now define Kleene closure as follows.
\begin{definition}
...
\end{definition}
\end{lstlisting}

The following is a definition atom, because it is single standing.
\begin{lstlisting}

\begin{definition}
...
\end{definition}

\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- important -->

</segment> <!-- cluster -->


<segment name='subsubsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Controlling granularity
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Controlling granularity
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::controlling-granularity
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::create
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::create
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>DC will create an atom for each top-level paragraph (paragraph not nested inside LaTeX environments). If a piece of text contains many small (one or two line) paragraphs, it can distracting for the user. For example, the following text consists of three small paragraphs.</p>
<pre><code>If this then that.  
  
If that then this.  
  
This if and only of if that.  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
DC will create an atom for each top-level paragraph (paragraph not nested inside LaTeX environments).  If a piece of text contains many small (one or two line) paragraphs, it can distracting for the user.  For example, the following text consists of three small paragraphs.
\begin{lstlisting}
If this then that.

If that then this.

This if and only of if that.
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::usually
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::usually
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>We usually don’t write like this but sometimes it happens. In such a case, you may want to wrap this text into a single paragraph atom.</p>
<pre><code>\begin{gram}[If and only If]  
If this then that.  
  
If that then this.  
  
This if and only of if that.  
\end{gram}  </code></pre>
<p>Alternatively you can wrap the text by curly braces as follows.</p>
<pre><code>{  
If this then that.  
  
If that then this.  
  
This if and only of if that.  
}  </code></pre>
<p>Both will have no impact on the PDF but on Diderot, you will have only one atom for the three sentences.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
We usually don't write like this but sometimes it happens.
In such a case, you may want to wrap this text into a single paragraph atom.
\begin{lstlisting}
\begin{gram}[If and only If]
If this then that.

If that then this.

This if and only of if that.
\end{gram}
\end{lstlisting}
Alternatively you can wrap the text by curly braces as follows.
\begin{lstlisting}
{
If this then that.

If that then this.

This if and only of if that.
}
\end{lstlisting}
Both will have no impact on the PDF but on Diderot, you will have only one atom for the three sentences.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->


</segment> <!-- subsubsection -->

</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Groups
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Groups
]]>
</field> <!-- title_src -->
<field name='label'>
sec:mtl::groups
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:def:dc::group
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='definition'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Group
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Group
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
def:dc::group
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>A <strong><em>group</em></strong> consist of a sequence of atoms. DC currently support only one kind of group: <code>flex</code>. On Diderot, a <code>flex</code> will display its first atom and allow the user to reveal the rest of the atoms by using a simple switch. This, for example, can be useful for hiding simple examples for a definition, the solution to an exercise, and a tangential remark, etc.</p>
<pre><code>\begin{flex}  
\begin{definition}[A Definition]  
\label{def:a}  
  
A definition  
\end{definition}  
  
\begin{example}[Simple Example I]  
\label{xmpl:a-simple}  
Simple example 1  
\end{example}  
  
\begin{example}[Simple Example II]  
\label{xmpl:a-simple-2}  
Simple example 2  
\end{example}  
  
\end{flex}  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
A \defn{group} consist of a sequence of atoms.  DC currently support only one kind of group: \lstinline`flex`.  On Diderot, a \lstinline`flex` will display its first atom and allow the user to reveal the rest of the atoms by using a simple switch.  This, for example, can be useful for hiding simple examples for a definition, the solution to an exercise, and a tangential remark, etc. 

\begin{lstlisting}
\begin{flex}
\begin{definition}[A Definition]
\label{def:a}

A definition
\end{definition}

\begin{example}[Simple Example I]
\label{xmpl:a-simple}
Simple example 1
\end{example}

\begin{example}[Simple Example II]
\label{xmpl:a-simple-2}
Simple example 2
\end{example}

\end{flex}
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- definition -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:nt:dc::turned
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='note'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
nt:dc::turned
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>This has turned out be a favorite feature of Diderot for authors and students alike. You can see how this ‘flex‘ example works below, where a definition atom has been paired flexibly with two examples. Click the drawer icon at the bottom left to open the ‘flex‘ and click again to close it.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
This has turned out be a favorite feature of Diderot for authors and students alike. 
You can see how this `flex` example works below, where a definition atom
has been paired flexibly with two examples.  Click the drawer icon
at the bottom left to open the `flex` and click again to close it.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- note -->

</segment> <!-- cluster -->

<segment name='flex'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:def:a
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='definition'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
A Definition
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
A Definition
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
def:a
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p> A definition.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
\label{def:a}
A definition.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- definition -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Simple Example
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Simple Example
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
ex:simple-1
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p> Simple example 1</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
\label{ex:simple-1}
Simple example 1
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Simple Example
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Simple Example
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
ex:simple-2
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p> Simple example 2</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
\label{ex:simple-2}
Simple example 2
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

</segment> <!-- flex -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Labels and References
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Labels and References
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::labels-refs
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::uses
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::uses
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>Diderot uses labels to identify various segments of a book, including chapters, sections, subsections, atoms etc. Labels in a chapter must all be unique but labels across chapters don’t have to be. We recommended giving each “unique segment” its own unique label. For example, if you have an exam problem on Fibonacci numbers, you can label the problem as <code>prb:fib</code>. You can then include the same exam problem in two different exams within the same book. We recommended using the label of a chapter as a prefix in all labels within that chapter.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
Diderot uses labels to identify various segments of a book, including
chapters, sections, subsections, atoms etc. 
Labels in a chapter must all be unique but labels across chapters
don't have to be.
We recommended giving each ``unique segment'' its own unique label.
For example, if you have an exam problem on Fibonacci numbers, you can
label the problem as \lstinline`prb:fib`.  You can then include the
same exam problem in two different exams within the same book.
We recommended using the label of a chapter as a prefix in all labels
within that chapter.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:xmpl:dc::recommend
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
xmpl:dc::recommend
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>We recommend labeling content as follows.</p>
<pre><code>\chapter{Introduction}  
\label{ch:intro}  
  
\begin{preamble}  
\label{prmbl:intro}  
...  
\end{preamble}  
  
\section{Overview}  
\label{sec:intro::overview}  
  
  
This is a paragraph (atom) without a label.  The following paragraph (atom) has a label.  
  
  
\begin{gram}  
\label{gr:intro::present}  
In this  section, we present...  
\end{gram}  
  
Here is another paragraph atom, consisting of two environments:  
\begin{itemize}  
...  
\end{itemize}  
\begin{enumerate}  
...  
\end{enumerate}  
  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
We recommend labeling content as follows.

\begin{lstlisting}
\chapter{Introduction}
\label{ch:intro}

\begin{preamble}
\label{prmbl:intro}
...
\end{preamble}

\section{Overview}
\label{sec:intro::overview}


This is a paragraph (atom) without a label.  The following paragraph (atom) has a label.


\begin{gram}
\label{gr:intro::present}
In this  section, we present...
\end{gram}

Here is another paragraph atom, consisting of two environments:
\begin{itemize}
...
\end{itemize}
\begin{enumerate}
...
\end{enumerate}

\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::references
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
References
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
References
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::references
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>To reference a label you can either use</p>
<ul>
<li><p><code>\href{label}{ref text}</code></p></li>
<li><p><code>\ref{label}</code>.</p></li>
</ul>
<p>The latter is compatible with PDF generation, whereas the former is not handled by <code>pdflatex</code> as we would hope (generate a reference to the section).</p>
<p>For a reference of the form <code>\ref{label}</code>, Diderot generates a reference text from the title of the entity being referred to. If the entity is not titled, then it uses the text “Reference”.</p>
<p>Note that you can use <code>\href{url}{ref text}</code> to generate a link to a url.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
To reference a label you can either use
\begin{itemize}
\item \lstinline`\href{label}{ref text}`
\item \lstinline`\ref{label}`.
\end{itemize}
The latter is compatible with PDF generation, whereas the former is not handled by \lstinline`pdflatex` as we would hope (generate a reference to the section).

For a reference of the form \lstinline`\ref{label}`, Diderot generates
a reference text from the title of the entity being referred to.  If
the entity is not titled, then it uses the text ``Reference''.

Note that you can use \lstinline`\href{url}{ref text}` to generate a link to a url.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::segment
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::segment
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>If a segment of a document is not given a label, then DC generates a unique label for it. When doing so, DC uses different prefixes for labels: <code>sec</code> for all sections, <code>grp</code> for groups, and the following for atoms. Atoms and their labels are shown below.</p>
<pre><code>algorithm : &quot;alg&quot;  
assumption : &quot;asm&quot;  
code : &quot;cd&quot;  
corollary : &quot;crl&quot;  
costspec : &quot;cst&quot;  
datastr : &quot;dtstr&quot;  
datatype : &quot;adt&quot;  
definition : &quot;def&quot;  
example : &quot;xmpl&quot;  
exercise : &quot;xrcs&quot;  
hint : &quot;hint&quot;  
important : &quot;imp&quot;  
lemma : &quot;lem&quot;  
note : &quot;nt&quot;  
gram : &quot;grm&quot;  
observe : &quot;obs&quot;  
observation : &quot;obs&quot;  
preamble : &quot;prmbl&quot;  
problem : &quot;prb&quot;  
proof : &quot;prf&quot;  
proposition : &quot;prop&quot;  
quote : &quot;quo&quot;  
remark : &quot;rmrk&quot;  
reminder : &quot;rmdr&quot;  
slide : &quot;slide&quot;  
solution : &quot;sol&quot;  
syntax : &quot;syn&quot;  
task : &quot;tsk&quot;  
theorem : &quot;thm&quot;  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
If a segment of a document is not given a label, then DC generates a
unique label for it.
When doing so, DC uses different prefixes for labels: \lstinline`sec` for all sections, \lstinline`grp` for groups, and the following for atoms.   Atoms and their labels are shown below.
\begin{lstlisting}
algorithm : "alg"
assumption : "asm"
code : "cd"
corollary : "crl"
costspec : "cst"
datastr : "dtstr"
datatype : "adt"
definition : "def"
example : "xmpl"
exercise : "xrcs"
hint : "hint"
important : "imp"
lemma : "lem"
note : "nt"
gram : "grm"
observe : "obs"
observation : "obs"
preamble : "prmbl"
problem : "prb"
proof : "prf"
proposition : "prop"
quote : "quo"
remark : "rmrk"
reminder : "rmdr"
slide : "slide"
solution : "sol"
syntax : "syn"
task : "tsk"
theorem : "thm"
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::reference-resolution
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Reference resolution
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Reference resolution
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::reference-resolution
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>When Diderot sees a reference to a label, it resolves it by looking for it in the course in the following order</p>
<ol>
<li><p>within the same chapter,</p></li>
<li><p>within the same book in decreasing chapter-rank order,</p></li>
<li><p>within the course in any other book in increasing book-rank order.</p></li>
</ol>
<p>If a label is multiply defined within a book, Diderot uses the reference is the chapter with the highest rank.</p>
<p>Note that you can reference a segment defined in another book. For example the recitation book could reference a label <code>def:shortest-paths</code> defined in the textbook of the course by using the usual syntax <code>\href{def:shortest-paths}</code>. If you know the book that you are referencing, you can also use the following syntax <code>\href{TB/def:shortest-paths}</code>, where <code>TB</code> is the label of the book that the target segment is defined in.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
When Diderot sees a reference to a label, it resolves it by looking
for it in the course in the following order
\begin{enumerate}
\item within the same chapter,
\item within the same book in decreasing chapter-rank order,
\item within the course in any other book in increasing book-rank order.
\end{enumerate}
If a label is multiply defined within a book, Diderot uses the
reference is the chapter with the highest rank.

Note that you can reference a segment defined in another book.  For
example the recitation book could reference a label
\lstinline`def:shortest-paths` defined in the textbook of the course by
using the usual syntax
\lstinline`\href{def:shortest-paths}`.
If you know the book that you are referencing, you can also use the following syntax
\lstinline`\href{TB/def:shortest-paths}`,
 where \lstinline`TB` is the label of the book that the target segment is defined in.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::book-references
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Book References
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Book References
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::book-references
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>You can reference a book by using the syntax <code>\ref{book-label/}</code>. The trailing slash tells DC and Diderot that this is a book reference rather than a reference to a label within this book. On Diderot, this reference will generate a link to the book within the course.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
You can reference a book by using the syntax 
\lstinline`\ref{book-label/}`. 
The trailing slash tells DC and Diderot that this is a book
reference rather than a reference to a label within this book. 
On Diderot, this reference will generate a link to the book within
the course.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::limitations
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Limitations
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Limitations
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::limitations
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>In LaTeX you can label pretty much anything. For example, you can label a line of code and refer to it via a number. In DC, labeling is restricted to atoms, sections, and chapters, with the exception of equation labels, which are supported. Learn more about the <a href="sec:dc::typesetting-mathematics">equation labels</a>.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
In LaTeX you can label pretty much anything. 
For example, you can label a line of code and refer to it via a number.
In DC, labeling is restricted to atoms, sections, and chapters, with the exception of equation labels, which are supported.
Learn more about the 
\href{sec:dc::typesetting-mathematics}{equation labels}.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Code
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Code
]]>
</field> <!-- title_src -->
<field name='label'>
sec:mtl::code
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::lstlisting
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::lstlisting
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p> For code, you can use <code>\lstinline</code> and the <code>lstlisting</code> environment. The language has to be specified first (see below for an example). The Kate language highligting spec should be included in the "meta" directory and the name of the file should match that of the language. For example if <code>language = C</code>, then the Kate file should be <code>meta/C.xml</code>. If the language is a dialect, then, e.g., <code>language = \{[Cdialect]C}</code>, then the file should be called <code>CdialectC</code>. Kate highlighting definitions for most languages are available online. If you need a custom language, you can probably write one with a bit of effort by starting with the Kate specification for a suitably close language.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
\label{sec:mtl::code}
For code, you can use \lstinline`\lstinline` and the \lstinline`lstlisting` environment.  The language has to be specified first (see below for an example).  The Kate language highligting spec should be included in the "meta" directory and the name of the file should match that of the language.  For example if \lstinline`language = C`, then the Kate file should be \lstinline`meta/C.xml`.  If the language is a dialect, then, e.g., \lstinline`language = \{[Cdialect]C}`, then the file should be called \lstinline`CdialectC`.  
Kate highlighting definitions for most languages are available online.
If you need a custom language, you can probably write one with a bit of effort by starting with the Kate specification for a  suitably close language.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='flex'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:xmpl:dc::python-code
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Python Code
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Python Code
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
xmpl:dc::python-code
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>Specify language as python, and include line-numbers on the left of each line. Don’t forget to include the Kate highlighting file for python in the meta directory.</p>
<pre><code>\begin{lstlisting}[language = python, numbers = left]  
def is_even (i):  
  if i %2 = 0:  
    return true  
  else   
    return false  
\end{lstlisting}  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
Specify language as python, and include  line-numbers on the left of each line.
Don't forget to include the Kate highlighting file for python in the meta directory.

\begin{verbatim}
\begin{lstlisting}[language = python, numbers = left]
def is_even (i):
  if i %2 = 0:
    return true
  else 
    return false
\end{lstlisting}
\end{verbatim}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::render
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>The code above will render like this:</p>
<div class="sourceCode" id="cb1" data-numbers="left"><pre class="sourceCode numberSource python numberLines python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1"></a><span class="kw">def</span> is_even (i):  </span>
<span id="cb1-2"><a href="#cb1-2"></a>  <span class="cf">if</span> i <span class="op">%</span><span class="dv">2</span> <span class="op">=</span> <span class="dv">0</span>:  </span>
<span id="cb1-3"><a href="#cb1-3"></a>    <span class="cf">return</span> true  </span>
<span id="cb1-4"><a href="#cb1-4"></a>  <span class="cf">else</span>   </span>
<span id="cb1-5"><a href="#cb1-5"></a>    <span class="cf">return</span> false  </span></code></pre></div>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
The code above will render like this:
\begin{lstlisting}[language = python, numbers = left]
def is_even (i):
  if i %2 = 0:
    return true
  else 
    return false
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- flex -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:xmpl:dc::code-in-c-dialect
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Code in C Dialect
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Code in C Dialect
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
xmpl:dc::code-in-c-dialect
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>Specify the dialect preferred, and don’t include line-numbers. Don’t forget to include the Kate highlighting file for the dialect in the meta directory.</p>
<pre><code>\begin{lstlisting}[language = C0C]  
main () {  
  return void  
}  
\end{lstlisting}  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
Specify the dialect preferred, and don't include line-numbers.
Don't forget to include the Kate highlighting file for the dialect in the meta directory.

\begin{verbatim}
\begin{lstlisting}[language = {[C0]C}]
main () {
  return void
}
\end{lstlisting}
\end{verbatim}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Images
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Images
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::images
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::include
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::include
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>You can include JPEG or PNG images by using the usual <code>includegraphics</code> command. We don’t support PDF images, because current PDF viewers (browser plugins) are rather clunky and could adversely impact user experience. When including images, there are two points to be careful about: naming and sizing.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
You can include JPEG or PNG images by using the usual \lstinline`includegraphics` command.  
We don't support PDF images, because current PDF viewers (browser plugins) are rather clunky and could adversely impact user experience.
When including images, there are two points to be careful about: naming and sizing.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::naming
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::naming
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>When naming the images, it is important the file name of each and every image in a chapter is unique. Diderot indexes images based on their filenames and ignores their paths. For example, it will treat <code>/tmp/image1.jpg</code> and <code>image1.jpg</code> as the same .</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
When naming the images, it is important the file name of each and every image in a chapter is unique.
Diderot indexes images based on their filenames and ignores their paths.
For example, it will treat
\lstinline`/tmp/image1.jpg` and  \lstinline`image1.jpg`
as the same .
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::sizing
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::sizing
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>When sizing your images, you could, in principle, use absolute sizes, e.g.,</p>
<pre><code>\includegraphics[width=5in]{myimage.jpg}  </code></pre>
<p>The problem with this approach is that the PDF output and the Diderot output will likely have different formats and the image that looks just fine on paper might look too big on Diderot or possibly vice versa. We therefore recommend using relative widths using the following approach</p>
<pre><code>\includegraphics[width=0.5\textwidth]{myimage.jpg}  </code></pre>
<p>DC will translate this to 50% width in html and 50% of <code>\textwidth</code> in PDF and the image will look consistent with its environment in both cases. When specifying the width, it is important to always include the fraction. For example, if you want the width to be exactly equal to <code>\textwidth</code> then use <code>width=1.0\textwidth</code>.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
When sizing your images, you could, in principle, use absolute sizes, e.g.,
\begin{lstlisting}
\includegraphics[width=5in]{myimage.jpg}
\end{lstlisting}
The problem with this approach is that the PDF output and the Diderot output will likely have different formats and the image that looks just fine on paper might look too big on Diderot or possibly vice versa.
We therefore recommend using relative widths using the following approach
\begin{lstlisting}
\includegraphics[width=0.5\textwidth]{myimage.jpg}
\end{lstlisting}
DC will translate this to 50\% width in html and 50\% of \lstinline`\textwidth` 
in PDF and the image will look consistent with its environment in both cases.  
When specifying the width, it is important to always include the fraction.  For example, if you want the width to be exactly equal to \lstinline`\textwidth` then use \lstinline`width=1.0\textwidth`.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:nt:dc::output
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='note'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
nt:dc::output
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>For PDF output, the author could also use <code>\textheight</code>. But this is not meaningful for HTML output, and will not work as expected.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
For PDF output, the author could also use \lstinline`\textheight`.
But this is not meaningful for HTML output, and will not work as expected.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- note -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:imp:dc::scale-is-not-supported
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='important'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Scale is not Supported
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Scale is not Supported
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
imp:dc::scale-is-not-supported
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>For PDF output it is also possible to use <code>scale</code>. For example,</p>
<pre><code>\includegraphics[scale=0.5]{myimage.jpg}  </code></pre>
<p>This means that the image should be shown at 50% of its actual dimensions. This has the same issues as the absolute measures approach. Furthermore, DC doesn’t detect attempt to detect the actual dimensions of the image and this approach is not supported.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
For PDF output it is also possible to use \lstinline`scale`.  For example,
\begin{lstlisting}
\includegraphics[scale=0.5]{myimage.jpg}
\end{lstlisting}

This means that the image should be shown at 50\% of its actual dimensions.  This has  the same issues as the absolute measures approach. Furthermore, DC doesn't detect attempt to detect the actual dimensions of the image and this approach is not supported.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- important -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::uploading-images
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Uploading Images
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Uploading Images
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::uploading-images
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>When uploading a chapter, via the UI or via the CLI, the user needs to upload the images explicitly.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
When uploading a chapter, via the UI or via the CLI, the user needs to upload the images explicitly.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Typesetting Mathematics
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Typesetting Mathematics
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::typesetting-mathematics
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::mathjax
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::mathjax
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>Diderot uses MathJax to render math environments. This works in many cases, especially for use that is consistent with AMS Math packages. There is one important caveat. Once you switch to math mode, try to stay in math mode. You can switch to text mode using <code>\text</code> but if you use macros inside the <code>\text</code>, then they might not work (because mathjax doesn’t know about your macros). For example, the following won’t work.</p>
<pre><code>$\lstinline`xyz`$  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
Diderot uses MathJax to render math environments.  This works in many cases, especially for use that is consistent with AMS Math packages.  
There is one important caveat. 
Once you switch to math mode, try to stay in math mode.  You can switch to text mode using \lstinline`\text` but if you use macros inside  the \lstinline`\text`, then they might not work (because mathjax doesn't know about your macros).  For example, the following won't work. 
\begin{lstlisting}
$\lstinline`xyz`$
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::support
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::support
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>Diderot and DC support equation numbering via MathJax with one restriction: the reference to an equation must be made in the same chapter that the equation is defined in. To refer to an equation label simply use the macro <code>\eqref</code> or <code>\ref</code> in math mode. Note that the reference should be from within the math mode.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
Diderot and DC support equation numbering via MathJax with one restriction: the reference to an equation must be made in the same chapter that the equation is defined in.
To refer to an equation label simply use the macro \lstinline`\eqref` or \lstinline`\ref` in math mode.  Note that the reference should be from within the math mode.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:eq:sample
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Equation Labels
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Equation Labels
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
eq:sample
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>The following LaTeX source defines an equation label and refers to it.</p>
<pre><code>\begin{equation}  
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}  
  \label{eq:sample}  
\end{equation}  
  
Consider  Equation~$\eqref{eq:sample}$ shown above.  </code></pre>
<p>It will be rendered as follows.</p>
<p><span class="math display">\[\begin{equation}  
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}  
  \label{eq:sample}  
\end{equation}\]</span></p>
<p>Consider Equation <span class="math inline">\(\eqref{eq:sample}\)</span> shown above.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
The following LaTeX source defines an equation label and refers to it. 

\begin{lstlisting}
\begin{equation}
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}
  \label{eq:sample}
\end{equation}

Consider  Equation~$\eqref{eq:sample}$ shown above.
\end{lstlisting}

It will be rendered as follows.

\[ \begin{equation}
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}
  \label{eq:sample}
\end{equation} \]

Consider Equation~$\eqref{eq:sample}$ shown above.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:eq:sample-2
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Multiple Equations
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Multiple Equations
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
eq:sample-2
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>Other environments such as <code>align</code> may be used to typeset multiple equations and label them. As an example, consider the following LaTeX code.</p>
<pre><code>\begin{align}  
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}  
  \label{eq:sample-2}  
\\  
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}  
  \label{eq:sample-3}  
\end{align}  
  
Equation~$\eqref{eq:sample-3}$ follows from Equation~$\eqref{eq:sample-2}$.  And furthermore, Equation~$\eqref{eq:sample-2}$ follows from Equation~$\eqref{eq:sample-3}$.    </code></pre>
<p>This will render on Diderot as follows.</p>
<p><span class="math display">\[\begin{align}  
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}  
  \label{eq:sample-2}  
\\  
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}  
  \label{eq:sample-3}  
\end{align}\]</span></p>
<p>Equation <span class="math inline">\(\eqref{eq:sample-3}\)</span> follows from Equation <span class="math inline">\(\eqref{eq:sample-2}\)</span>. And furthermore, Equation <span class="math inline">\(\eqref{eq:sample-2}\)</span> follows from Equation <span class="math inline">\(\eqref{eq:sample-3}\)</span>.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
Other environments such as \lstinline`align` may be used to typeset multiple equations and label them. 
As an example, consider the following LaTeX code.

\begin{lstlisting}
\begin{align}
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}
  \label{eq:sample-2}
\\
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}
  \label{eq:sample-3}
\end{align}

Equation~$\eqref{eq:sample-3}$ follows from Equation~$\eqref{eq:sample-2}$.  And furthermore, Equation~$\eqref{eq:sample-2}$ follows from Equation~$\eqref{eq:sample-3}$.  
\end{lstlisting}

This will render on Diderot as follows.

\[ \begin{align}
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}
  \label{eq:sample-2}
\\
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}
  \label{eq:sample-3}
\end{align} \]

Equation~$\eqref{eq:sample-3}$ follows from Equation~$\eqref{eq:sample-2}$.  And furthermore, Equation~$\eqref{eq:sample-2}$ follows from Equation~$\eqref{eq:sample-3}$.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Indexing
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Indexing
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::indexing
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='flex'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::near
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::near
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>In the near term, we plan to index books automatically by doing some natural-language processing. To aid this, we recommend marking definitional terms by using one of the following LaTeX commands: <code>\defb, \defe, \defn</code>. You can define these commands as follows or any other way you prefer.</p>
<pre><code>\newcommand{\defb}[1]{\textbf{#1}}  
\newcommand{\defe}[1]{\emph{#1}}  
\newcommand{\defn}[1]{\textbf{\emph{#1}}}  </code></pre>
<p>The indexing algorithm will look up these commands and link the use of these terms to their definition.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
In the near term, we plan to index books automatically by doing some natural-language processing.  
To aid this, we recommend marking definitional terms by using one of the following LaTeX commands: \lstinline`\defb, \defe, \defn`.  You can define these commands as follows or any other way you prefer.
\begin{lstlisting}
\newcommand{\defb}[1]{\textbf{#1}}
\newcommand{\defe}[1]{\emph{#1}}
\newcommand{\defn}[1]{\textbf{\emph{#1}}}
\end{lstlisting}
The indexing algorithm will look up these commands and link the use of these terms to their definition.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
def:algorithm
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p> An <strong><em>algorithm</em></strong> is a recipe for solving a problem.</p>
<p> The <strong><em>single source shortest path problem</em></strong> or <strong><em>SSSP problem</em></strong> for short requires finding the shortest paths from a given source vertex to each and every vertex in a graph.</p>
<p>Given these definitions, the following sentence will be processed so that the terms “algorithm” and “SSSP” are linked to the two definitions above. Dijkstra’s algorithm solves the SSSP problem.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
\begin{definition}[Algorithm]
\label{def:algorithm}
An \defn{algorithm} is a recipe for solving a problem.
\end{definition}


\begin{definition}[Single Source Shortest Paths Problem]
\label{def:sssp}
The \defn{single source shortest path problem} or \defn{SSSP problem} for short requires finding  the shortest paths from a given source vertex to each and every vertex in a graph. 
\end{definition}

Given these definitions, the following sentence will be processed so that the terms ``algorithm'' and ``SSSP'' are linked to the two definitions above.
Dijkstra's algorithm solves the SSSP problem.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

</segment> <!-- flex -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Colors
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Colors
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::colors
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::colors
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::colors
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>You can use colors as follows</p>
<pre><code>\textcolor{red}{my text}  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
You can use colors as follows
\begin{lstlisting}
\textcolor{red}{my text}
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Embedding Videos
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Embedding Videos
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::embedding-videos
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::embed
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::embed
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>You can embed a video to your notes by using <code>\video{url}{text}</code> command, where <code>text</code> stands for a piece of text that will be displayed on browsers incapable of handling embedded video. For example, the following code, when uploaded on diderot will embed the corresponding YouTube video.</p>
<pre><code>Here is a \video{https://www.youtube.com/embed/8QyE9D_3ezQ}{tango video.}  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
You can embed a video to your notes by using \lstinline`\video{url}{text}` command, where \lstinline`text` stands for a piece of text that will be displayed on browsers incapable of handling embedded video.
For example, the following code, when uploaded on diderot will embed the corresponding YouTube video.
\begin{lstlisting}
Here is a \video{https://www.youtube.com/embed/8QyE9D_3ezQ}{tango video.}
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:xmpl:dc::video-embedding
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Video Embedding
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Video Embedding
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
xmpl:dc::video-embedding
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>The video embedding code will look like this.</p>
<p>Here is a tango video</p>
<div class='video-container' style='margin-bottom:15px'><iframe class='ql-video' frameborder='0' allowfullscreen='true' src='https://www.youtube.com/embed/8QyE9D_3ezQ'>Murat and Michelle Erdemsel.</iframe></div>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
The video embedding code will look like this.

Here is a tango video 
\begin{verbatim}
%%%% diderot_html
<div class='video-container' style='margin-bottom:15px'><iframe class='ql-video' frameborder='0' allowfullscreen='true' src='https://www.youtube.com/embed/8QyE9D_3ezQ'>Murat and Michelle Erdemsel.</iframe></div>
\end{verbatim}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
File Attachments
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
File Attachments
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::file-attachments
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::attach
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::attach
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>You can attach a file to a chapter by using the command <code>\href{file://path.name.ext}{referral text}</code> command. When uploading your chapter, simply include the file <code>name.ext</code> in your attachments.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
You can attach a file to a chapter by using the command \lstinline`\href{file://path.name.ext}{referral text}` command.
When uploading your chapter, simply include the file \lstinline{name.ext} in your attachments.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:xmpl:dc::file-attachment
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
File Attachment
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
File Attachment
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
xmpl:dc::file-attachment
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>The following code, when uploaded on diderot will create a link to the attached file (requires uploading the file <code>dc.tex</code> as an attachment).</p>
<pre><code>Here is the \href{file://dc.tex}{LaTeX source code} for this chapter of the guide.  </code></pre>
<p>Here is the <a href="file://dc.tex">LaTeX source code</a> for this chapter of the guide.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
The following code, when uploaded on diderot will create a link to the attached file (requires uploading the file \lstinline`dc.tex` as an attachment).  
\begin{lstlisting}
Here is the \href{file://dc.tex}{LaTeX source code} for this chapter of the guide.
\end{lstlisting}

Here is the \href{file://dc.tex}{LaTeX source code} for this chapter of the guide.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:imp:dc::uniqueness-of-attachments
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='important'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Uniqueness of Attachments
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Uniqueness of Attachments
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
imp:dc::uniqueness-of-attachments
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>File name of each and every image and attachment in a chapter most be unique. Diderot indexes images and attachments based on their filenames and ignores their paths. For example, it will treat <code>/tmp/image1.jpg</code> and <code>image1.jpg</code> as the same.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
File name of each and every image and attachment in a chapter most be unique.
Diderot indexes images and attachments based on their filenames and ignores their paths.
For example, it will treat
\lstinline`/tmp/image1.jpg` and  \lstinline`image1.jpg` 
as the same.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- important -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Limitations
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Limitations
]]>
</field> <!-- title_src -->
<field name='label'>
sec:mtl::limitations
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::latex
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::latex
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>LaTeX has grown rich (and perhaps too rich) but many authors tend to use a small subset. DC appears to work well for most uses. Here is a list of known limitations.</p>
<ul>
<li><p>For XML translation work, the chapter should be compileable to PDF. In general, recommended practice is to make sure that you can generate a PDF from your sources and then generate an XML.</p></li>
<li><p>All macro definitions via <code>newcommand</code> are restricted to the “preamble” of the book.</p></li>
<li><p>Each chapter must have a unique label.</p></li>
<li><p>Fancy packages are not supported. Stick to basic latex and AMS Math packages.</p></li>
<li><p>Support for tabular environment is limited: borders will not show and columns will be centered. You can use the array (math/mathjax) as a substitute, and use <code>\mbox</code> for text fields.</p></li>
<li><p>You can use <code>itemize</code>, <code>enumerate</code>, and <code>description</code> environments in their basic form. Changing the label format with <code>enumitem</code> package and similar packages do not work. You can imitate these by using heading for your items.</p></li>
<li><p>Labeling and references are limited to chapters, sections, and atoms. You can label these and refer to them. Labels in other latex environments such as, items in lists, code lines, and equations are not supported.</p></li>
</ul>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
LaTeX has grown rich (and perhaps too rich) but many authors tend to use a small subset.  
DC appears to work well for most uses. 
Here is a list of known limitations.  
\begin{itemize}

\item For XML translation work, the chapter should be compileable to PDF.  In general, recommended practice is to make sure that you can generate a PDF from your sources and then generate an XML.

\item All macro definitions via \lstinline`newcommand` are restricted to the ``preamble'' of the book.

\item Each chapter must have a unique label.

\item Fancy packages are not supported.  Stick to basic latex and AMS Math packages.

\item Support for tabular environment is limited: borders will not show and columns will be centered.  You can use the array (math/mathjax) as a substitute, and  use \lstinline`\mbox` for text fields.  
 
\item You can use \lstinline`itemize`, \lstinline`enumerate`, and \lstinline`description` environments in their basic form.  Changing the label format with \lstinline`enumitem` package and similar packages do not work.  You can imitate these by using heading for your items.  

\item Labeling and references are limited to chapters, sections, and atoms.  You can label these and refer to them.  Labels in other latex environments such as, items in lists, code lines, and equations are not supported. 

\end{itemize}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:rmrk:dc::limitations
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='remark'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
rmrk:dc::limitations
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>The above limitations all pertain to XML generation. Because DC works on a plain LaTeX document, these don’t apply to generating other outputs such as PDF.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
The above limitations all pertain to XML generation.  Because DC works on a plain LaTeX document, these don't apply to generating other outputs such as 
PDF.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- remark -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

</segment> <!-- section -->

<segment name='section'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Typesetting with Markdown
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Typesetting with Markdown
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::typesetting-with-markdown
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::basic
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::basic
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>DC has basic support for Markdown to XML translation.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
DC has basic support for Markdown to XML translation.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::header
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Header
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Header
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::header
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>For translation to work Markdown documents should have either of the following two headers</p>
<ul>
<li><p>Without front matter</p>
<pre><code># Chapter Title  
...  </code></pre></li>
<li><p>With YAML frontmatter.</p>
<pre><code>---   
Frontmatter  
---  
# Chapter Title  
...  </code></pre></li>
</ul>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
For translation to work Markdown documents should have either of the following two headers
\begin{itemize}
\item Without front matter
\begin{lstlisting}
# Chapter Title
...
\end{lstlisting}  

\item  With YAML frontmatter.
\begin{lstlisting}
--- 
Frontmatter
---
# Chapter Title
...
\end{lstlisting}  
\end{itemize}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:imp:dc::special-symbols-and-html-code
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='important'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Special Symbols and HTML code
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Special Symbols and HTML code
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
imp:dc::special-symbols-and-html-code
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>We have observed a couple of common mistakes in Markdown that can lead to problems publishing your work on Diderot.</p>
<p>First one concerns special symbols, which should be escaped.</p>
<ul>
<li><p>The hash sign # is a special symbol in LaTeX and must be escaped when using LaTeX macros.</p></li>
<li><p>In math mode % is a LaTeX-Math special symbol and should be escaped.</p></li>
</ul>
<p>The second concerns html code. You can use html tags in Markdown for various formatting purposes. If you want to use html syntax for any other reason, then please indicate that it is code. For example, the following is an incorrect use of html code, because it doesn’t close the tag <code>table</code>:</p>
<pre><code>Here is an example html tag ``&lt;table&gt;&#39;&#39;  </code></pre>
<p>The unclosed html tag here should be placed inside a code, e.g., by using back-tick delimiters.</p>
<pre><code>Here is an example html tag `&lt;table&gt;`  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
We have observed a couple of common mistakes in Markdown that can lead to problems publishing your work on Diderot.

First one concerns special symbols, which should be escaped.
\begin{itemize}
\item The hash sign \# is a special symbol in LaTeX and must be escaped when using LaTeX macros.
\item In math mode \% is a LaTeX-Math special symbol and should be escaped.
\end{itemize}

The second concerns html code.  You can use html tags in Markdown for various formatting purposes.  If you want to use html syntax for  any other reason, then please indicate that it is code.  For example, the following is an incorrect use of html code, because it doesn't close the tag \lstinline`table`:
\begin{lstlisting}
Here is an example html tag ``<table>''
\end{lstlisting}

The unclosed html tag here should be placed inside a code, e.g., by using back-tick delimiters. 
\begin{lstlisting}
Here is an example html tag `<table>`
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- important -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:imp:dc::chapter-titles
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='important'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Chapter Titles
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Chapter Titles
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
imp:dc::chapter-titles
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>In any given book, all chapter titles must be unique. This ensures that all chapters are uniquely labeled: <code>dc</code> assigns a chapter with title “This is a Chapter Title” the label “ch:this-is-a-chapter-title”.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
In any given book, all chapter titles must be unique.  
This ensures that all chapters are uniquely labeled: \lstinline`dc` assigns a chapter with title ``This is a Chapter Title'' the label ``ch:this-is-a-chapter-title''.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- important -->

</segment> <!-- cluster -->


<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Chapters and Sections
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Chapters and Sections
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::chapters-and-sections
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::atx-sytle
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::atx-sytle
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>We support the atx-sytle headers, which start by 1-6 hash (#) signs, e.g.,</p>
<pre><code># This is a chapter  
  
## This is a section  
  
### This is a subsection  
  
#### This is a subsubsection  
  
##### This is a paragraph  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
We support the atx-sytle headers, which start by 1-6 hash (\#) signs, e.g.,
\begin{lstlisting}
# This is a chapter

## This is a section

### This is a subsection

#### This is a subsubsection

##### This is a paragraph
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Code
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Code
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::md::code
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::usual
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::usual
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>Usual Markdown conventions apply. You can include inline code by using the backtick symbol. For code blocks use three or more backticks and specify the lanugage. It is important to finish a code block with the same number of backtics.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
Usual Markdown conventions apply.  You can include inline code by using the backtick symbol. For code blocks use three or more backticks and specify the lanugage. It is important to finish a code block with the same number of backtics.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:xmpl:dc::html
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
xmpl:dc::html
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<pre><code>```html  
&lt;!DOCTYPE html&gt;  
&lt;html lang=&quot;en&quot;&gt;  
&lt;head&gt;  
    &lt;meta charset=&quot;utf-8&quot;/&gt;  
    &lt;meta content=&quot;IE=edge&quot; http-equiv=&quot;X-UA-Compatible&quot;/&gt;  
    &lt;meta content=&quot;width=device-width, initial-scale=1.0&quot; name=&quot;viewport&quot;/&gt;  
...  
  
```  
  
```ocaml  
let x = 2 in  
2+2  
```  
  
```python  
def fun x:  
  if x then x  
  else x  
```  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
\begin{lstlisting}
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
    <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
...

```

```ocaml
let x = 2 in
2+2
```

```python
def fun x:
  if x then x
  else x
```
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Typesetting Mathematics
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Typesetting Mathematics
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::typesetting
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::delimiters
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::delimiters
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>You can use the usual LaTeX delimiters to include mathematics, i.e., for inline style, use single dollar sign. For math blocks use double-dollars or <code>\[</code>.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
You can use the usual LaTeX delimiters to include mathematics, i.e., for inline style, use single dollar sign.
For math blocks use double-dollars or \lstinline`\[`.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Images
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Images
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::include
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='flex'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::jpeg
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::jpeg
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>You can include JPEG, PNG, and SVG images by using following syntax.</p>
<pre><code>![caption](image_file.ext){width=xy%}  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
You can include JPEG, PNG, and SVG images by using following syntax.
\begin{lstlisting}
![caption](image_file.ext){width=xy%}
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

<atom name='example'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
xmpl:dc::displays
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>The following code displays the image <code>papers.svg</code>.</p>
<pre><code>![A categorization of CS papers.](papers.svg){width=90%}  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
The following code displays the image \lstinline`papers.svg`.
\begin{lstlisting}
![A categorization of CS papers.](papers.svg){width=90%}
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- example -->

</segment> <!-- flex -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Limitations
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Limitations
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::limitations
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::markdown
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::markdown
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>Markdown to XML translation is relatively basic at this time. If you need a particular feature not supported here, please let us know. Here are few known limitations.</p>
<ul>
<li><p>Markdown usually allows blocks to be ended with equal or greater number of delimiter symbols than the start. For example a codeblock that starts with <code>```</code> can be ended with <code>```````</code>. DC insists on blocks to start and end with the same length delimeters.</p></li>
<li><p>Blank lines in DC will always start an atom. For example if you pepper blank lines into your list, each list item will turn into a separate atom. This is probably not what you have intended.</p>
<pre><code>  
* Item 1 is its own atom.  
  
* Item 2 is its own atom.  
  </code></pre></li>
<li><p>DC does not allow nested paragraphs as some Markdown extensions do.</p>
<pre><code>  
* Item 1 is its own atom.  
  
    This is a paragraph that you intended to nest inside Item 1 but  this will start a new atom in DC.    
  
* Item 2 is its own atom.  
  </code></pre></li>
</ul>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
Markdown to XML translation is relatively basic at this time.  If you need a particular feature not supported here, please let us know.
Here are few known limitations.
\begin{itemize}
\item Markdown usually allows blocks to be ended with equal or greater number of delimiter symbols than the start. For example a codeblock that starts with \lstinline!```! can be ended with \lstinline!```````!.  DC insists on blocks to start and end with the same length delimeters.

\item Blank lines in DC will always start an atom.  For example if you pepper blank lines into your list, each list item will turn into a separate atom.  This is probably not what you have intended.  
\begin{lstlisting}

* Item 1 is its own atom.

* Item 2 is its own atom.

\end{lstlisting}

\item DC does not allow nested paragraphs as some Markdown extensions do.  

\begin{lstlisting}

* Item 1 is its own atom.

    This is a paragraph that you intended to nest inside Item 1 but  this will start a new atom in DC.  

* Item 2 is its own atom.

\end{lstlisting}

\end{itemize}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

<segment name='subsection'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
Compiling Markdown To XML
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Compiling Markdown To XML
]]>
</field> <!-- title_src -->
<field name='label'>
sec:dc::compiling-markdown-to-xml
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::guide
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::guide
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>The guide includes a very simple markdown document<code>markdown/example.md</code>.</p>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
The guide includes a very simple markdown document\lstinline`markdown/example.md`.
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::making-xml
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Making XML
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Making XML
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::making-xml
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>To generate xml, simply use the Makefile provided as follows.</p>
<pre><code>$ make markdown/example.xml  </code></pre>
<p>If you would like to know more about how thing are being handled, you can turn on the verbose option</p>
<pre><code>$ make verbose=true markdown/example.xml   </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
To generate xml, simply use the Makefile provided as follows.
\begin{lstlisting}
$ make markdown/example.xml
\end{lstlisting}
If you would like to know more about how thing are being handled, you can turn on the verbose option
\begin{lstlisting}
$ make verbose=true markdown/example.xml 
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::using-dc-directly
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
Using DC directly
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
Using DC directly
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::using-dc-directly
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>You could also use the DC tools directly as follows. The command will generate <code>markdown/example.xml</code>.</p>
<pre><code>$ dc markdown/example.md  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
You could also use the DC tools directly as follows.
The command will generate  \lstinline`markdown/example.xml`.

\begin{lstlisting}
$ dc markdown/example.md
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->

<segment name='cluster'>
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='title'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> <!-- title_src -->
<field name='label'>
grp:grm:dc::the-debugger
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->

<atom name='gram'>
<field name='pl'>
...NOT.PROVIDED.PL...
</field> <!-- pl -->
<field name='pl_version'>
...NOT.PROVIDED.PL_VERSION...
</field> <!-- pl_version -->
<field name='title'>
<![CDATA[
The “Debugger”
]]>
</field> <!-- title -->
<field name='title_src'>
<![CDATA[
The ``Debugger''
]]>
</field> <!-- title_src -->
<field name='cover'>
...NOT.PROVIDED.COVER...
</field> <!-- cover -->
<field name='sound'>
...NOT.PROVIDED.SOUND...
</field> <!-- sound -->
<field name='label'>
grm:dc::the-debugger
</field> <!-- label -->
<field name='depend'>
...NOT.PROVIDED.DEPEND...
</field> <!-- depend -->
<field name='point_value'>
0.0
</field> <!-- point_value -->
<field name='body'>
<![CDATA[
<p>As you might notice, <code>dc</code> doesn’t currenty give reasonable error messages, partly because if you can generate PDF and html from your LaTeX sources, it is unlikely for there to be errors. In case of an error, you can pass the <code>-d</code> flag to <code>dc</code> to tell her to print the atoms that it matches.</p>
<pre><code>dc -d input.md -o output.xml  </code></pre>
]]>
</field> <!-- body -->
<field name='body_src'>
<![CDATA[
As you might notice, \lstinline`dc` doesn't currenty give reasonable error messages, partly because if you can generate PDF and html from your LaTeX sources, it is unlikely for there to be errors. 
In case of an error, you can pass the \lstinline`-d` flag to \lstinline`dc` to tell her to print the atoms that it matches.
\begin{lstlisting}
dc -d input.md -o output.xml
\end{lstlisting}
]]>
</field> <!-- body_src -->

<field name='caption'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption -->
<field name='caption_src'>
<![CDATA[
...NOT.PROVIDED.CAPTION...
]]>
</field> <!-- caption_src -->
</atom> <!-- gram -->

</segment> <!-- cluster -->


</segment> <!-- subsection -->

</segment> <!-- section -->

</segment> <!-- chapter -->
